name: dockercompose14375872867134566518
services:
  sistemadecadastroapi:
    build:
      context: C:\Users\levi.santos\Source\Repos\Jenkins-DockerCompose-API
      dockerfile: SistemaDeCadastroAPI/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: sistemadecadastroapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 5226
      published: "8089"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: C:\Users\levi.santos\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\levi.santos\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  sqlserver:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Developer
      SA_PASSWORD: '#levi123456'
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1470"
      protocol: tcp
    volumes:
    - type: volume
      source: db-volume
      target: /var/lib/mysql
      volume: {}
networks:
  default:
    name: dockercompose14375872867134566518_default
volumes:
  db-volume:
    name: dockercompose14375872867134566518_db-volume